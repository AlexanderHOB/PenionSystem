{"remainingRequest":"A:\\PenionSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js!A:\\PenionSystem\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js!A:\\PenionSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!A:\\PenionSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!A:\\PenionSystem\\frontend\\src\\views\\Mesas.vue?vue&type=script&lang=js&","dependencies":[{"path":"A:\\PenionSystem\\frontend\\src\\views\\Mesas.vue","mtime":1560791214976},{"path":"A:\\PenionSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\PenionSystem\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"A:\\PenionSystem\\frontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"A:\\PenionSystem\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"A:\\PenionSystem\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"A:\\\\PenionSystem\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"A:\\\\PenionSystem\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport LoadingDialog from \"../components/LoadingDialog\";\nimport LoadingFish from \"../components/LoadingFish\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  components: {\n    LoadingDialog: LoadingDialog,\n    LoadingFish: LoadingFish,\n    ErrorMessage: ErrorMessage\n  },\n  data: function data() {\n    return {\n      title: 'Mesas',\n      // Data para las mesas\n      messageMesas: '',\n      mesas: [],\n      mesasTotal: 0,\n      // Data para la paginaci贸n\n      pageTotal: 0,\n      page: 1,\n      paginateDisabled: false,\n      // Datos para valdiar formulario\n      valid: true,\n      rules: {\n        required: function required(value) {\n          return !!value || 'Required.';\n        },\n        counter: function counter(value) {\n          return value.length <= 50 || 'como maximo 50 caracteres';\n        },\n        maxValue: function maxValue(value) {\n          return value <= 30 || 'Capacidad no puede ser mas de 30';\n        }\n      },\n      // Data para editar Mesa\n      numero: null,\n      capacidad: null,\n      descripcion: '',\n      create: true\n    };\n  },\n  methods: _objectSpread({\n    test: function test() {\n      this.descripcion = '';\n    },\n    // OBTENER MESAS\n    getMesas: function () {\n      var _getMesas = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, data, mesas;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.loadingTitleMutation('Accediendo a la informaci贸n');\n                this.loadingDialogMutation(true);\n                _context.next = 5;\n                return axios.get(this.url + 'mesa', this.config);\n\n              case 5:\n                response = _context.sent;\n\n                if (response.data.data) {\n                  data = response.data;\n                  mesas = data.data;\n\n                  if (mesas.length > 0) {\n                    this.mesas = mesas;\n                    this.messageMesas = '';\n                    this.mesasTotal = data.total;\n\n                    if (data.last_page) {\n                      this.pageTotal = data.last_page;\n                    }\n\n                    this.page = 1;\n                  } else {\n                    this.messageMesas = 'No existen mesas creadas';\n                    this.pageTotal = false;\n                  }\n\n                  this.headerActionsMutation(true);\n                } else {\n                  this.headerActionsMutation(false);\n                  this.messageMesas = response.data.message;\n                  this.mesas = [];\n                  this.pageTotal = false;\n                }\n\n                _context.next = 14;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                this.headerActionsMutation(false);\n                this.pageTotal = false;\n                this.messageMesas = 'Error al conctar con el servidor';\n\n              case 14:\n                _context.prev = 14;\n                this.loadingDialogMutation(false);\n                return _context.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9, 14, 17]]);\n      }));\n\n      function getMesas() {\n        return _getMesas.apply(this, arguments);\n      }\n\n      return getMesas;\n    }(),\n    // ACTUALIZANDO MESAS\n    refreshMesas: function () {\n      var _refreshMesas = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(page) {\n        var loadingTitle,\n            create,\n            response,\n            data,\n            mesas,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                loadingTitle = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 'Accediendo a la informaci贸n';\n                create = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : true;\n                _context2.prev = 2;\n                this.paginateDisabled = true;\n                this.loadingTitleMutation(loadingTitle);\n\n                if (create) {\n                  this.loadingDialogMutation(true);\n                }\n\n                _context2.next = 8;\n                return axios.get(this.url + 'mesa', {\n                  params: {\n                    page: this.page\n                  },\n                  headers: {\n                    Authorization: this.config.headers.Authorization\n                  }\n                });\n\n              case 8:\n                response = _context2.sent;\n                data = response.data;\n                mesas = response.data.data;\n                this.messageMesas = '';\n                this.mesas = mesas;\n                this.headerActionsMutation(true);\n                _context2.next = 21;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](2);\n                this.headerActionsMutation(false);\n                this.pageTotal = false;\n                this.messageMesas = 'Error al conctar con el servidor';\n\n              case 21:\n                _context2.prev = 21;\n                this.loadingDialogMutation(false);\n                this.paginateDisabled = false;\n                return _context2.finish(21);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 16, 21, 25]]);\n      }));\n\n      function refreshMesas(_x) {\n        return _refreshMesas.apply(this, arguments);\n      }\n\n      return refreshMesas;\n    }(),\n    // MODAL PARA EDITAR MESA\n    editarMesaModal: function editarMesaModal(index) {\n      this.numero = this.mesas[index].numero;\n      this.capacidad = this.mesas[index].capacidad;\n      this.descripcion = this.mesas[index].descripcion;\n      this.index = index;\n      this.id = this.mesas[index].id;\n      this.create = false;\n      this.$refs.form.resetValidation();\n      this.createModalMutation(true);\n    },\n    // CERRAR MODAL\n    closeModal: function closeModal() {\n      this.createModalMutation(false);\n      setTimeout(this.resetForm, 100);\n    },\n    // Limpiar Formulario\n    resetForm: function resetForm() {\n      this.numero = null;\n      this.capacidad = null;\n      this.descripcion = '';\n      this.create = true;\n      this.$refs.form.resetValidation();\n    },\n    // CREAR MESAS\n    crearMesa: function () {\n      var _crearMesa = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                if (!this.$refs.form.validate()) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                this.loadingTitleMutation('Subiendo informac贸n');\n                this.loadingDialogMutation(true);\n                this.createModalMutation(false);\n                _context3.next = 7;\n                return axios.post(this.url + 'mesa/registrar', {\n                  numero: this.numero,\n                  capacidad: this.capacidad,\n                  descripcion: this.descripcion\n                }, this.config);\n\n              case 7:\n                response = _context3.sent;\n                this.resetForm();\n\n                if (this.mesasTotal % 10 == 0) {\n                  this.pageTotal++;\n                }\n\n                this.page = this.pageTotal;\n                _context3.next = 13;\n                return this.refreshMesas(null, 'Creando Mesa', false);\n\n              case 13:\n                _context3.next = 19;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.resetForm();\n                console.log(_context3.t0);\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n\n      function crearMesa() {\n        return _crearMesa.apply(this, arguments);\n      }\n\n      return crearMesa;\n    }(),\n    // EDITAR MESA\n    editarMesa: function () {\n      var _editarMesa = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var numeroBup, capacidadBup, descripcionBup, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n\n                if (!this.$refs.form.validate()) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                this.createModalMutation(false);\n\n                if (this.descripcion == '' || this.descripcion == null) {\n                  this.descripcion = 'Mesa sin descripci贸n';\n                }\n\n                numeroBup = this.numero;\n                capacidadBup = this.capacidad;\n                descripcionBup = this.descripcion;\n                this.mesas[this.index].numero = this.numero;\n                this.mesas[this.index].capacidad = this.capacidad;\n                this.mesas[this.index].descripcion = this.descripcion;\n                this.resetForm();\n                _context4.next = 13;\n                return axios.post(this.url + 'mesa/actualizar/' + this.id, {\n                  numero: numeroBup,\n                  capacidad: capacidadBup,\n                  descripcion: descripcionBup\n                }, this.config);\n\n              case 13:\n                response = _context4.sent;\n\n              case 14:\n                _context4.next = 20;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.resetForm();\n                console.log(_context4.t0);\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 16]]);\n      }));\n\n      function editarMesa() {\n        return _editarMesa.apply(this, arguments);\n      }\n\n      return editarMesa;\n    }()\n  }, mapMutations(['loadingDialogMutation', 'loadingFishMutation', 'createModalMutation', 'headerActionsMutation', 'loadingTitleMutation', 'breadcrumbMutation'])),\n  computed: _objectSpread({}, mapState(['url', 'config', 'loadingFish', 'createModalState']), {\n    createModal: {\n      get: function get() {\n        return this.createModalState;\n      },\n      set: function set(value) {\n        this.createModalMutation(value);\n      }\n    }\n  }),\n  created: function created() {\n    this.headerActionsMutation(false);\n    this.loadingFishMutation(true);\n  },\n  // Al crear la instancia de vue\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.breadcrumbMutation('Mesas');\n              _context5.next = 3;\n              return this.getMesas();\n\n            case 3:\n              this.loadingFishMutation(false);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }()\n};",{"version":3,"sources":["Mesas.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n  <LoadingFish v-if=\"loadingFish\" />\r\n\r\n  <v-container grid-list-lg v-else>\r\n    <v-layout row wrap>\r\n      <v-flex xs12 v-if=\"messageMesas\">\r\n        <ErrorMessage :errorMessage=\"messageMesas\" :refresh=\"getMesas\" />\r\n      </v-flex>\r\n      <template v-else>\r\n        <v-flex xs12 class=\"d-flex align-center\">\r\n          <h1 class=\"display-1\">{{ title }}</h1>\r\n          <div class=\"text-xs-right\">\r\n            <v-btn class=\"blue\" dark fab small @click=\"getMesas\"><v-icon>replay</v-icon></v-btn>\r\n          </div>\r\n        </v-flex>\r\n        <v-flex v-for=\"(mesa, index) of mesas\" :key=\"mesa.id\" xs12 sm6 md4 lg3>\r\n          <v-card>\r\n            <v-img\r\n            :src=\"require('../assets/img/mesas/mesaOcupada.svg')\"\r\n            contain\r\n            height=\"100\"\r\n            class=\"mesa\"\r\n            ></v-img>\r\n            <v-card-title class=\"pt-0\">\r\n                <h2>{{ mesa.id }}</h2>\r\n            </v-card-title>\r\n            <v-card-text class=\"py-0\">\r\n              <p><strong>Capacidad: {{ mesa.capacidad }} {{ mesa.capacidad === 1 ? 'persona' : 'personas' }}</strong></p>\r\n              <p>{{ mesa.descripcion }}</p>\r\n            </v-card-text>\r\n            <v-card-actions>\r\n              <v-btn color=\"green\" flat @click=\"editarMesaModal(index)\">Editar Mesa</v-btn>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-flex>\r\n      </template>\r\n    </v-layout>\r\n\r\n    <v-dialog v-model=\"createModal\" persistent max-width=\"600px\">\r\n      <v-card>\r\n        <v-card-title>\r\n          <v-spacer></v-spacer>\r\n          <h3 v-if=\"create\" class=\"headline\">Crear Mesa</h3>\r\n          <h3 v-else class=\"headline\">Editar Mesa</h3>\r\n          <v-spacer></v-spacer>\r\n        </v-card-title>\r\n        <v-card-text class=\"pt-0\">\r\n          <v-form\r\n            ref=\"form\"\r\n            lazy-validation\r\n            v-model=\"valid\"\r\n          >\r\n            <v-container>\r\n              <v-layout row wrap>\r\n                <v-flex xs12 sm6>\r\n                  <v-text-field\r\n                    color=\"blue\"\r\n                    label=\"N煤mero de mesa\"\r\n                    v-model=\"numero\"\r\n                    autofocus\r\n                    :rules=\"[rules.required]\"\r\n                    counter\r\n                    mask=\"##\"\r\n                  ></v-text-field>\r\n                </v-flex> \r\n                <v-flex xs12 sm6>\r\n                  <v-text-field \r\n                    color=\"blue\"\r\n                    label=\"Capacidad\"\r\n                    v-model=\"capacidad\"\r\n                    :rules=\"[rules.required, rules.maxValue]\"\r\n                    counter\r\n                    mask=\"##\"\r\n                  ></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12>\r\n                  <v-textarea\r\n                    color=\"blue\"\r\n                    label=\"Descripci贸n\"\r\n                    auto-grow\r\n                    @click:append=\"descripcion = ''\"\r\n                    v-model=\"descripcion\"\r\n                    :rules=\"[rules.counter]\"\r\n                    counter=\"50\"\r\n                    append-icon=\"clear\"\r\n                  ></v-textarea>\r\n                </v-flex>\r\n              </v-layout>\r\n            </v-container>\r\n          </v-form>\r\n        </v-card-text>\r\n        <v-card-actions class=\"text-xs-center\">\r\n          <v-spacer></v-spacer>\r\n            <v-btn color=\"red darken-1\" flat @click=\"closeModal\">Cerrar</v-btn>\r\n            <v-btn :disabled=\"!valid\" v-if=\"create\" color=\"green\" flat @click=\"crearMesa\">Crear</v-btn>\r\n            <v-btn :disabled=\"!valid\" v-else color=\"green darken-1\" flat @click=\"editarMesa\">Editar</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    <template v-if=\"pageTotal\">\r\n      <div class=\"text-xs-center mt-4\">\r\n        <v-pagination\r\n          v-model=\"page\"\r\n          :length=\"pageTotal\"\r\n          color=\"blue\"\r\n          circle\r\n          :disabled=\"paginateDisabled\"\r\n          @input=\"refreshMesas\"\r\n          @next=\"refreshMesas\"\r\n          @previous=\"refreshMesas\"\r\n        ></v-pagination>\r\n      </div>\r\n    </template>\r\n\r\n    <LoadingDialog />\r\n\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios';\r\n  import LoadingDialog from '../components/LoadingDialog';\r\n  import LoadingFish from '../components/LoadingFish';\r\n  import ErrorMessage from '../components/ErrorMessage';\r\n\r\n  import { mapState, mapMutations } from 'vuex';\r\n\r\n  export default {\r\n    components: {\r\n      LoadingDialog,\r\n      LoadingFish,\r\n      ErrorMessage\r\n    },\r\n    data:() => ({\r\n      title: 'Mesas',\r\n      // Data para las mesas\r\n      messageMesas: '',\r\n      mesas: [],\r\n      mesasTotal: 0,\r\n      // Data para la paginaci贸n\r\n      pageTotal: 0,\r\n      page: 1,\r\n      paginateDisabled: false,\r\n      // Datos para valdiar formulario\r\n      valid: true,\r\n      rules: {\r\n        required: value => !!value || 'Required.',\r\n        counter: value => value.length <= 50 || 'como maximo 50 caracteres',\r\n        maxValue: value => value <= 30 || 'Capacidad no puede ser mas de 30'\r\n      },\r\n      // Data para editar Mesa\r\n      numero: null,\r\n      capacidad: null,\r\n      descripcion: '',\r\n      create: true,\r\n    }),\r\n    methods: {\r\n      test(){\r\n        this.descripcion = '';\r\n      },\r\n      // OBTENER MESAS\r\n      async getMesas(){\r\n        try {\r\n          this.loadingTitleMutation('Accediendo a la informaci贸n');\r\n          this.loadingDialogMutation(true);\r\n\r\n          let response = await axios.get(this.url + 'mesa', this.config);\r\n\r\n          if(response.data.data){\r\n            let data = response.data;\r\n            let mesas = data.data;\r\n            if(mesas.length > 0){\r\n              this.mesas = mesas;\r\n              this.messageMesas = '';\r\n              this.mesasTotal = data.total;\r\n\r\n              if(data.last_page){\r\n                this.pageTotal = data.last_page;\r\n              }\r\n              this.page = 1;\r\n            }else {\r\n              this.messageMesas = 'No existen mesas creadas';\r\n              this.pageTotal = false;\r\n            }\r\n            this.headerActionsMutation(true);\r\n          }else {\r\n            this.headerActionsMutation(false);\r\n            this.messageMesas = response.data.message;\r\n            this.mesas = [];\r\n            this.pageTotal = false;\r\n          }\r\n        } catch (error) {\r\n          this.headerActionsMutation(false);\r\n          this.pageTotal = false;\r\n          this.messageMesas = 'Error al conctar con el servidor';\r\n        }finally {\r\n          this.loadingDialogMutation(false);\r\n        }\r\n      },\r\n\r\n      // ACTUALIZANDO MESAS\r\n      async refreshMesas(page, loadingTitle ='Accediendo a la informaci贸n', create = true){\r\n        try {\r\n          this.paginateDisabled = true;\r\n          this.loadingTitleMutation(loadingTitle);\r\n          if(create){\r\n            this.loadingDialogMutation(true);\r\n          }\r\n\r\n          let response = await axios.get(this.url + 'mesa', {\r\n            params: {\r\n              page: this.page\r\n            },\r\n            headers: {\r\n              Authorization: this.config.headers.Authorization\r\n            }\r\n          });\r\n          let data = response.data;\r\n          let mesas = response.data.data;\r\n          this.messageMesas = '';\r\n          this.mesas = mesas;\r\n          this.headerActionsMutation(true);\r\n        } catch (error) {\r\n          this.headerActionsMutation(false);\r\n          this.pageTotal = false;\r\n          this.messageMesas = 'Error al conctar con el servidor';\r\n        }finally {\r\n          this.loadingDialogMutation(false);\r\n          this.paginateDisabled = false;\r\n        }\r\n      },\r\n\r\n      // MODAL PARA EDITAR MESA\r\n      editarMesaModal(index){\r\n        this.numero = this.mesas[index].numero;\r\n        this.capacidad = this.mesas[index].capacidad;\r\n        this.descripcion = this.mesas[index].descripcion;\r\n        this.index = index;\r\n        this.id = this.mesas[index].id;\r\n        this.create = false;\r\n        this.$refs.form.resetValidation();\r\n        this.createModalMutation(true);\r\n      },\r\n\r\n      // CERRAR MODAL\r\n      closeModal(){\r\n        this.createModalMutation(false);\r\n        setTimeout(this.resetForm, 100);\r\n      },\r\n\r\n      // Limpiar Formulario\r\n      resetForm(){\r\n        this.numero = null;\r\n        this.capacidad = null;\r\n        this.descripcion = '';\r\n        this.create = true;\r\n        this.$refs.form.resetValidation();\r\n      },\r\n\r\n      // CREAR MESAS\r\n      async crearMesa(){\r\n        try {\r\n          if (this.$refs.form.validate()) {\r\n            this.loadingTitleMutation('Subiendo informac贸n');\r\n            this.loadingDialogMutation(true);\r\n            this.createModalMutation(false);\r\n\r\n            let response = await axios.post(this.url + 'mesa/registrar', {\r\n              numero: this.numero,\r\n              capacidad: this.capacidad,\r\n              descripcion: this.descripcion\r\n            }, this.config);\r\n\r\n            this.resetForm();            \r\n            \r\n            if(this.mesasTotal % 10 == 0){\r\n              this.pageTotal++;\r\n            }\r\n            this.page = this.pageTotal;\r\n            await this.refreshMesas(null, 'Creando Mesa', false);\r\n          }\r\n        } catch (error) {\r\n          this.resetForm();\r\n          console.log(error);\r\n        }\r\n      },\r\n\r\n      // EDITAR MESA\r\n      async editarMesa(){\r\n        try {\r\n          if (this.$refs.form.validate()) {\r\n            this.createModalMutation(false);\r\n            if(this.descripcion == '' || this.descripcion == null){\r\n              this.descripcion = 'Mesa sin descripci贸n';\r\n            }\r\n\r\n            let numeroBup = this.numero;\r\n            let capacidadBup = this.capacidad;\r\n            let descripcionBup = this.descripcion;\r\n\r\n            this.mesas[this.index].numero = this.numero;\r\n            this.mesas[this.index].capacidad = this.capacidad;\r\n            this.mesas[this.index].descripcion = this.descripcion;\r\n\r\n            this.resetForm();\r\n\r\n            let response = await axios.post(this.url + 'mesa/actualizar/' + this.id, {\r\n              numero: numeroBup,\r\n              capacidad: capacidadBup,\r\n              descripcion: descripcionBup\r\n            }, this.config);\r\n          }\r\n        } catch (error) {\r\n          this.resetForm();\r\n          console.log(error);\r\n        }\r\n      },\r\n      ...mapMutations(['loadingDialogMutation', 'loadingFishMutation', 'createModalMutation', 'headerActionsMutation', 'loadingTitleMutation', 'breadcrumbMutation']),\r\n    },\r\n    computed: {\r\n      ...mapState(['url', 'config', 'loadingFish', 'createModalState']),\r\n      createModal: {\r\n        get() {\r\n          return this.createModalState\r\n        },\r\n        set(value) {\r\n          this.createModalMutation(value)\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.headerActionsMutation(false);\r\n      this.loadingFishMutation(true);\r\n    },\r\n    // Al crear la instancia de vue\r\n    async mounted(){\r\n      this.breadcrumbMutation('Mesas');\r\n      await this.getMesas();\r\n      this.loadingFishMutation(false);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .mesa {\r\n    transform: translateY(25px);\r\n  }\r\n</style>"],"sourceRoot":"src/views"}]}